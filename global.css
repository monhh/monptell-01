html {
    box-sizing: border-box;
    text-size-adjust: none;
}

*, *::before, *::after {
    box-sizing: inherit;
    /* debug ------------------ */
    /* outline: 2px solid lime; */
    /* background: orange; */
}

@media (min-width: 590px) {
    :root {
        --gutter: var(--space-xl);
        /* --small-screen: 0; */
    }
}

/* Exception-based styling ----------------------- */
blockquote, body, dd, dl, figure, h1, h2, h3, h4, p {
    margin-block-end: 0;
}
:where(body,h1,h2,h3,h4,p,figure,blockquote,dl,dd) {
    margin-block: 0;
}

.wrapper {
    margin-inline: auto;
    max-width: var(--wrapper-max-width);/* 1680px */
    padding-inline: var(--gutter-wrapper-inline,var(--gutter));
    /* position: relative; */
}

/* .wrapper[data-wrapper-type=inner] {
    min-width: 100%;
    padding-block: var(--gutter-wrapper-inner-block,var(--gutter));
    padding-inline: var(--gutter-wrapper-inner-inline,var(--gutter));
} */

/* Cluster components suit any groups of elements that differ in length and are liable to wrap.  */
.cluster {
    display: flex;
    flex-direction: var(--cluster-direction,row);
    justify-content: var(--cluster-horizontal-alignment,flex-start); /* main axis */
    align-items: var(--cluster-vertical-alignment,center);/* cross axis */

    flex-wrap: var(--cluster-wrap,wrap);
    
    column-gap: var(--cluster-column-gap,var(--gutter,var(--space-s-m)));
    row-gap: var(--cluster-row-gap,var(--gutter,var(--space-s-m)));
    
    outline: 4px dashed green;
}

/* flow */
.flow>*+* {
    margin-block-start: var(--flow-space,1em);
}

/* h1, h2, h3, h4, h5, h6 */
@media (min-width: 50em) {
    h1, h2, h3, h4, h5, h6 {
        overflow-wrap: unset;
    }
}

h1, h2, h3, h4 {
    font-family: var(--ff-sans);
    font-feature-settings: "cpsp" on;
    font-weight: var(--heading-font-weight,var(--font-bold));
    letter-spacing: var(--heading-kerning,var(--kerning));
    line-height: var(--heading-line-height,var(--leading-fine));
    /* overflow-wrap: anywhere; */
    text-wrap: balance;
}
h2 {
    font-size: var(--text-size-heading-2);
    max-width: var(--measure-s);
}


/* ul --------------------  */
:is(ol,ul) {
    margin-block-end: 0;
}

ul {
    padding-inline-start: var(--global-ul-padding,1.75ch);
    padding-inline-start: 1.75ch;
}

ul ::marker {
    line-height: 1;
}
/* a --------------------  */
a:not([class]) {
    text-decoration-skip-ink: auto;
    color: var(--color-accent);
}

a {
    text-decoration: none;
    color: inherit;
}

::selection {
    background: var(--color-selection-bg);
    color: var(--color-selection-text);
}

svg {flex-shrink: 0;}

[role=list][class], [role=tablist] {
    list-style: none;
    margin-block: 0;
    padding: 0;
}
